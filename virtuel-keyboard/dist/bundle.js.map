{"version":3,"file":"bundle.js","mappings":"mBAEA,ICFO,MACL,GACA,GACA,GACA,GACA,GACA,GACA,IAAY,EACZ,IAAa,EAEbA,cACEC,MAAK,IACLA,MAAK,GACP,CAEA,KACEA,MAAK,EAAeC,SAASC,eAAe,aAC5CF,MAAK,EAAYA,MAAK,EAAaG,cAAc,WACjDH,MAAK,EAAgBA,MAAK,EAAaG,cAAc,SACrDH,MAAK,EAAcA,MAAK,EAAaG,cAAc,aACnDH,MAAK,EAAgBA,MAAK,EAAaG,cAAc,gBACrDH,MAAK,EAAWA,MAAK,EAAcG,cAAc,SACnD,CAEA,KACEH,MAAK,EAAUI,iBAAiB,SAAUJ,MAAK,GAC/CA,MAAK,EAAcI,iBAAiB,SAAUJ,MAAK,GACnDC,SAASG,iBAAiB,UAAWJ,MAAK,EAAWK,KAAKL,OAC1DC,SAASG,iBAAiB,QAASJ,MAAK,EAASK,KAAKL,OACtDA,MAAK,EAASI,iBAAiB,QAASJ,MAAK,GAC7CA,MAAK,EAAYI,iBACf,YACAJ,MAAK,EAAaK,KAAKL,OAEzBC,SAASG,iBAAiB,UAAWJ,MAAK,EAAWK,KAAKL,MAC5D,CAEA,GAAWM,GACT,GAAIN,MAAK,EAAW,OACpBA,MAAK,GAAa,EAClB,MAAMO,EAAQD,EAAME,OAAOC,QAAQ,WAC7BC,IAAaH,GAAOI,UAAUC,SAAS,UACvCC,EAAMN,GAAOO,QAAQD,IACvBH,GAAcG,GAAe,UAARA,GAA2B,cAARA,IAC1Cb,MAAK,EAASe,OAASF,GAErBH,GAAoB,UAARG,IACdb,MAAK,EAASe,OAAS,KAErBL,GAAoB,cAARG,IACdb,MAAK,EAASe,MAAQf,MAAK,EAASe,MAAMC,MAAM,GAAI,IAEtDhB,MAAK,EAAYG,cAAc,YAAYQ,UAAUM,OAAO,SAC9D,CAEA,GAAaX,GACPN,MAAK,IACTA,MAAK,GAAa,EAClBM,EAAME,OAAOC,QAAQ,YAAYE,UAAUO,IAAI,UACjD,CAEA,GAASZ,GACPA,EAAME,OAAOO,MAAQT,EAAME,OAAOO,MAAMI,QAAQ,iBAAkB,GACpE,CAEA,GAAWb,GACLN,MAAK,IACTA,MAAK,GAAY,EACjBA,MAAK,EAAcW,UAAUS,OAAO,QAAS,UAAUC,KAAKf,EAAMgB,MAClEtB,MAAK,EACFG,cAAc,cAAcG,EAAMiB,UACjCZ,UAAUO,IAAI,UACpB,CAEA,GAASZ,GACHN,MAAK,IACTA,MAAK,GAAY,EACjBA,MAAK,EACFG,cAAc,cAAcG,EAAMiB,UACjCZ,UAAUM,OAAO,UACvB,CAEA,GAAeX,GACbkB,QAAQC,IAAInB,EAAME,OAAOkB,SACzBzB,SAAS0B,gBAAgBC,aACvB,QACAtB,EAAME,OAAOkB,QAAU,YAAc,GAEzC,CAEA,GAAcpB,GACZL,SAAS4B,KAAKC,MAAMC,WAAazB,EAAME,OAAOO,KAChD,E","sources":["webpack://virtuel-keyboard_1/./src/js/index.js","webpack://virtuel-keyboard_1/./src/js/keyboard.js"],"sourcesContent":["import \"../css/style.css\";\nimport { Keyboard } from \"./keyboard\";\nnew Keyboard();\n","export class Keyboard {\n  #switchEl;\n  #fontSelectEl;\n  #containerEl;\n  #keyboardEl;\n  #inputGroupEl;\n  #inputEl;\n  #keyPress = false;\n  #mouseDown = false;\n\n  constructor() {\n    this.#assignElement();\n    this.#addEvent();\n  }\n\n  #assignElement() {\n    this.#containerEl = document.getElementById(\"container\");\n    this.#switchEl = this.#containerEl.querySelector(\"#switch\");\n    this.#fontSelectEl = this.#containerEl.querySelector(\"#font\");\n    this.#keyboardEl = this.#containerEl.querySelector(\"#keyboard\");\n    this.#inputGroupEl = this.#containerEl.querySelector(\"#input-group\");\n    this.#inputEl = this.#inputGroupEl.querySelector(\"#input\");\n  }\n\n  #addEvent() {\n    this.#switchEl.addEventListener(\"change\", this.#onChangeTheme);\n    this.#fontSelectEl.addEventListener(\"change\", this.#onChangeFont);\n    document.addEventListener(\"keydown\", this.#onKeyDown.bind(this));\n    document.addEventListener(\"keyup\", this.#onKeyUp.bind(this));\n    this.#inputEl.addEventListener(\"input\", this.#onInput);\n    this.#keyboardEl.addEventListener(\n      \"mousedown\",\n      this.#onMouseDown.bind(this)\n    );\n    document.addEventListener(\"mouseup\", this.#onMouseup.bind(this));\n  }\n\n  #onMouseup(event) {\n    if (this.#keyPress) return;\n    this.#mouseDown = false;\n    const keyEl = event.target.closest(\"div.key\");\n    const isActive = !!keyEl?.classList.contains(\"active\");\n    const val = keyEl?.dataset.val;\n    if (isActive && !!val && val !== \"Space\" && val !== \"Backspace\") {\n      this.#inputEl.value += val;\n    }\n    if (isActive && val === \"Space\") {\n      this.#inputEl.value += \" \";\n    }\n    if (isActive && val === \"Backspace\") {\n      this.#inputEl.value = this.#inputEl.value.slice(0, -1);\n    }\n    this.#keyboardEl.querySelector(\".active\")?.classList.remove(\"active\");\n  }\n\n  #onMouseDown(event) {\n    if (this.#keyPress) return;\n    this.#mouseDown = true;\n    event.target.closest(\"div.key\")?.classList.add(\"active\");\n  }\n\n  #onInput(event) {\n    event.target.value = event.target.value.replace(/[ㄱ-ㅎ ㅏ-ㅣ 가-힣]/g, \"\");\n  }\n  //[^0-9a-zA-Z]/g\n  #onKeyDown(event) {\n    if (this.#mouseDown) return;\n    this.#keyPress = true;\n    this.#inputGroupEl.classList.toggle(\"error\", /Process/.test(event.key));\n    this.#keyboardEl\n      .querySelector(`[data-code=${event.code}]`)\n      ?.classList.add(\"active\");\n  }\n\n  #onKeyUp(event) {\n    if (this.#mouseDown) return;\n    this.#keyPress = false;\n    this.#keyboardEl\n      .querySelector(`[data-code=${event.code}]`)\n      ?.classList.remove(\"active\");\n  }\n\n  #onChangeTheme(event) {\n    console.log(event.target.checked);\n    document.documentElement.setAttribute(\n      \"theme\",\n      event.target.checked ? \"dark-mode\" : \"\"\n    ); //document.documentElement <html>요소 반환\n  }\n\n  #onChangeFont(event) {\n    document.body.style.fontFamily = event.target.value;\n  }\n}\n"],"names":["constructor","this","document","getElementById","querySelector","addEventListener","bind","event","keyEl","target","closest","isActive","classList","contains","val","dataset","value","slice","remove","add","replace","toggle","test","key","code","console","log","checked","documentElement","setAttribute","body","style","fontFamily"],"sourceRoot":""}